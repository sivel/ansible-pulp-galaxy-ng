- hosts: localhost
  gather_subset: min
  vars:
    pulp_user: admin
    pulp_password: password
  tasks:
    - name: List existing containers
      community.docker.docker_host_info:
        containers: true
        containers_filters:
          name: pulp-galaxy-ng
      register: existing_containers

    - assert:
        that:
          - existing_containers.containers == []
        msg: "pulp-galaxy-ng container found, not continuing. Manually remove before continuing."

    - name: Get docker host
      command: |
        {{ ansible_python_interpreter|default(ansible_python.executable) }} -c 'import docker; from six.moves.urllib.parse import urlparse; print(urlparse(docker.from_env().api.base_url).netloc.split(":")[0])'
      register: docker_host

    - set_fact:
        pulp_api: http://{{docker_host.stdout}}:8080

    - name: Create tmpdir for later use
      tempfile:
        state: directory
      register: tempfile_result

    - name: Set tmpdir fact
      set_fact:
        tmpdir: "{{ tempfile_result.path }}"

    - block:
        - name: Template out settings.py
          template:
            src: settings.py.j2
            dest: "{{ tmpdir }}/settings.py"

        - name: Create the container, without starting it
          community.docker.docker_container:
            name: pulp-galaxy-ng
            image: pulp/pulp-galaxy-ng
            state: stopped
            ports:
              - 8080:80

        - name: Copy settings.py and script to set the admin password
          command: "{{ item }}"
          loop:
            - docker cp {{ tmpdir }}/settings.py pulp-galaxy-ng:/etc/pulp/settings.py
            - docker cp {{ playbook_dir }}/files/admin_pass.prep pulp-galaxy-ng:/etc/cont-init.d/111-postgres

      always:
        - name: Remove target_tmpdir
          file:
            path: "{{ tmpdir }}"
            state: absent

    - name: Start the container
      community.docker.docker_container:
        name: pulp-galaxy-ng
        state: started

    - meta: end_play

    - include_tasks: tasks/pulp.yml

    - include_tasks: tasks/galaxy_ng.yml

    - name: Ensure the output directory exists
      file:
        dest: '{{ playbook_dir }}/out'
        state: directory

    - name: Template out ansible.cfg file with all galaxy servers
      template:
        src: ansible.cfg.j2
        dest: '{{ playbook_dir }}/out/ansible.cfg'

    - name: Container root URL
      debug:
        msg: "{{ pulp_api }}"

    - name: pulp username/password
      debug:
        msg: "{{ pulp_user }} / {{ pulp_password }}"

    - name: pulp_ansible base url
      debug:
        msg: "{{ pulp_api }}/pulp_ansible/galaxy/automation-hub/api/"

    - name: galaxy_ng base url
      debug:
        msg: "{{ pulp_api }}/api/galaxy/"

    - name: galaxy_ng token
      debug:
        msg: "{{ galaxy_ng_token.json.token }}"

    - name: ansible.cfg
      debug:
        msg: See {{ playbook_dir }}/out/ansible.cfg for a pre-built ansible.cfg for this container
